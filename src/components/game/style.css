body {
    background-color: snow;
    font-size: 1rem;
    font-family: Arial, "Arial CE", "Helvetica CE", sans-serif;
    color: black;
    max-width: 30rem;
    margin: auto;
    padding: 1em;
}

h1 {
    font-size: 1.6em
}

h2 {
    font-size: 1.4em
}

h3 {
    font-size: 1.2em
}

table.game-field {
    border-collapse: collapse; /* Ensure borders collapse properly */
    width: 500px; /* Set width to auto */
    height: 500px; /* Set height to auto */
    margin: 0px; /* Reset margin */
    padding: 0px; /* Reset padding */
}

table.game-field td {
    text-align: center;
    background-color: black;
    width: 3em; /* Adjust the width to desired size (3em for example) */
    height: 3em; /* Adjust the height to match the width */
    font-size: initial; /* Reset font-size to initial value for the content inside the tiles */
}

table.game-field td.tile {
    transition: transform 0.3s ease, background-color 0.3s ease; /* Add smooth transition for transform and background-color */
    overflow: hidden; /* Hide overflow content */
    position: relative; /* Position relative for absolute positioning of child elements */
}

/* Define the blinking animation */
@keyframes blinkAnimation {
    0% { opacity: 1; }
    50% { opacity: 0; }
    100% { opacity: 1; }
}
@keyframes vibrationAnimation {
    0% { transform: translate(-2px, -2px); }
    25% { transform: translate(2px, 2px); }
    50% { transform: translate(0px, 0px); }
    75% { transform: translate(-2px, 2px); }
    100% { transform: translate(2px, -2px); }
}

/* Apply animation to tiles when hovered */
table.game-field td.tile:hover {
    animation: blinkAnimation 0.5s ease-in-out, vibrationAnimation 0.5s infinite; /* Blink and vibrate continuously */
}



/* Define the colors for different types of tiles */
table.game-field td.tile[data-color^="R"] {
    background-color: red;
}
table.game-field td.tile[data-color^="B"] {
    background-color: blue;
}
table.game-field td.tile[data-color^="G"] {
    background-color: lime;
}
table.game-field td.tile[data-color^="Y"] {
    background-color: yellow;
}
table.game-field td.tile[data-color^="P"] {
    background-color: magenta;
}
table.game-field td.tile[data-color^="O"] {
    background-color: orange;
}

/* Add animation when tiles break */
@keyframes breakAnimation {
    0% { transform: scale(1); }
    50% { transform: scale(1.2); }
    100% { transform: scale(0); }
}

/* Apply animation to tiles when they break */
table.game-field td.tile.breaking {
    animation: breakAnimation 0.5s forwards;
}

/* Styling for the content inside the tiles */
table.game-field td.tile .content {
    position: absolute; /* Position absolutely inside the tile */
    top: 50%; /* Center vertically */
    left: 50%; /* Center horizontally */
    transform: translate(-50%, -50%); /* Center content */
    color: #fff; /* Text color */
    font-weight: bold; /* Bold text */
}

/* Styling for the shadow effect when tiles break */
table.game-field td.tile.breaking::after {
    content: ""; /* Create pseudo-element */
    position: absolute; /* Position absolutely */
    top: 0; /* Align to the top */
    left: 0; /* Align to the left */
    width: 100%; /* Full width */
    height: 100%; /* Full height */
    background-color: rgba(0, 0, 0, 0.5); /* Semi-transparent black */
    z-index: 1; /* Ensure it's above the tile */
}
